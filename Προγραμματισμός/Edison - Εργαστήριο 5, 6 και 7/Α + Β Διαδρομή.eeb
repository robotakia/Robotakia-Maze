<xml xmlns="http://www.w3.org/1999/xhtml">
  <block type="new_event_clap_two" id=".%QXYzqq/xb/g]Vw8IU*" x="-124" y="-223">
    <next>
      <block type="drive_speed" id="mu_CO(Kb6fo=mLbLlpo(">
        <value name="CHOICE">
          <shadow type="dropdown_drive_setspeed" id="K`ZLx;7]p7N+`y4%u4Y#">
            <field name="CHOICE">5</field>
          </shadow>
        </value>
        <next>
          <block type="drive_forwards_time" id="-aB]~#77*oz@0}R_%/I-">
            <value name="DURATION">
              <shadow type="math_positive_number" id="/O;s#){1@_R2Hk:G~_}Q">
                <field name="NUM">0.7</field>
              </shadow>
            </value>
            <next>
              <block type="control_wait_event" id="@;.EUlKg./UEE1j{b4%d">
                <value name="CHOICE">
                  <shadow type="dropdown_control_setwait_event" id=".XLXW.U`e9#[j]G*@/TO">
                    <field name="CHOICE">clap</field>
                  </shadow>
                </value>
                <next>
                  <block type="drive_right_time" id="^)^oO1S*E3!7LKI_aq#G">
                    <value name="DURATION">
                      <shadow type="math_positive_number" id="f5it!WIc{f(9!ea(gt84">
                        <field name="NUM">0.4</field>
                      </shadow>
                    </value>
                    <next>
                      <block type="drive_forwards_time" id="Iv,C`?Haa]y+~F^pgBD1">
                        <value name="DURATION">
                          <shadow type="math_positive_number" id="^n3rFXcZZQ270Hx7rSv|">
                            <field name="NUM">0.2</field>
                          </shadow>
                        </value>
                        <next>
                          <block type="control_wait_event" id=",O}z#R|9SZRsrb4d.FDF">
                            <value name="CHOICE">
                              <shadow type="dropdown_control_setwait_event" id="li(860@HH={mg8ByHcl^">
                                <field name="CHOICE">clap</field>
                              </shadow>
                            </value>
                            <next>
                              <block type="drive_left_time" id="zY~iI{)H?aZDj=JC~[3D">
                                <value name="DURATION">
                                  <shadow type="math_positive_number" id="Z?c1tBoG{]SWek38(ThF">
                                    <field name="NUM">0.4</field>
                                  </shadow>
                                </value>
                                <next>
                                  <block type="drive_forwards_time" id="Dvd_xEUrR:cJG|~@o?^u">
                                    <value name="DURATION">
                                      <shadow type="math_positive_number" id="!/U#xFd#X)}m/=aZ6kkL">
                                        <field name="NUM">0.15</field>
                                      </shadow>
                                    </value>
                                    <next>
                                      <block type="control_wait_event" id="i,/0joN%g`_G{wBYitth">
                                        <value name="CHOICE">
                                          <shadow type="dropdown_control_setwait_event" id="e7WH2gOpku%OGFC![@R4">
                                            <field name="CHOICE">clap</field>
                                          </shadow>
                                        </value>
                                        <next>
                                          <block type="drive_left_time" id="4f[F6rJz12uMyt?X:?dm">
                                            <value name="DURATION">
                                              <shadow type="math_positive_number" id="~cP]dH]+^94Kve7FoTP)">
                                                <field name="NUM">0.4</field>
                                              </shadow>
                                            </value>
                                            <next>
                                              <block type="drive_forwards_time" id="~qyup(f75O3;M-1}0A~b">
                                                <value name="DURATION">
                                                  <shadow type="math_positive_number" id="+3,GH7NC/@TPcu`Z3Q^d">
                                                    <field name="NUM">0.9</field>
                                                  </shadow>
                                                </value>
                                              </block>
                                            </next>
                                          </block>
                                        </next>
                                      </block>
                                    </next>
                                  </block>
                                </next>
                              </block>
                            </next>
                          </block>
                        </next>
                      </block>
                    </next>
                  </block>
                </next>
              </block>
            </next>
          </block>
        </next>
      </block>
    </next>
  </block>
  <block type="control_wait_event" id="YjQ]6d=MQ7cnMK?ui9=0" x="-97" y="-51">
    <value name="CHOICE">
      <shadow type="dropdown_control_setwait_event" id="C|=t:+/fe(s21#w-V`B]">
        <field name="CHOICE">clap</field>
      </shadow>
    </value>
    <next>
      <block type="drive_right_time" id="[|?0Eh#fEv5,)g:a1;[#">
        <value name="DURATION">
          <shadow type="math_positive_number" id="xlNK}pyE%9A.T#GX}*.:">
            <field name="NUM">0.5</field>
          </shadow>
        </value>
        <next>
          <block type="drive_forwards_time" id="7R,Qltu0%qH|l/WYh0nL">
            <value name="DURATION">
              <shadow type="math_positive_number" id="iC6_jD`WSqf!b=u7Y283">
                <field name="NUM">0.3</field>
              </shadow>
            </value>
            <next>
              <block type="control_wait_event" id="G`h4rHhqPIwrS*A_wFMx">
                <value name="CHOICE">
                  <shadow type="dropdown_control_setwait_event" id="]wdnRU{S{`_yg,l!?-V?">
                    <field name="CHOICE">clap</field>
                  </shadow>
                </value>
                <next>
                  <block type="drive_right_time" id="_rEt-~qiA%ip#Z_,Rk:r">
                    <value name="DURATION">
                      <shadow type="math_positive_number" id="8iIC2:[/{e}`On_hueDL">
                        <field name="NUM">0.5</field>
                      </shadow>
                    </value>
                    <next>
                      <block type="drive_forwards_time" id="r5CJh62WH:]`%Cw~WUWB">
                        <value name="DURATION">
                          <shadow type="math_positive_number" id="T[PMIF9y9|I*S~,T7f)D">
                            <field name="NUM">0.5</field>
                          </shadow>
                        </value>
                        <next>
                          <block type="control_wait_event" id="ZROnY.^OyWvnk@lAW%8^">
                            <value name="CHOICE">
                              <shadow type="dropdown_control_setwait_event" id="%;y6o|1^8NIC/jaBO{Jg">
                                <field name="CHOICE">clap</field>
                              </shadow>
                            </value>
                            <next>
                              <block type="drive_left_time" id="gUyX!qy,2)eSHaCpZmqL">
                                <value name="DURATION">
                                  <shadow type="math_positive_number" id="e}`Nywa^u}i!)*AAGfe1">
                                    <field name="NUM">0.5</field>
                                  </shadow>
                                </value>
                                <next>
                                  <block type="control_wait_event" id="gncaWe05sbM3P6aV.Clm">
                                    <value name="CHOICE">
                                      <shadow type="dropdown_control_setwait_event" id="o^q9uu_jW9L#U.=#5px6">
                                        <field name="CHOICE">clap</field>
                                      </shadow>
                                    </value>
                                    <next>
                                      <block type="drive_right_time" id="MXWDy{~gm/R05pbWg;@r">
                                        <value name="DURATION">
                                          <shadow type="math_positive_number" id="TRrX2x;hSTL;)^:%*Kmn">
                                            <field name="NUM">0.5</field>
                                          </shadow>
                                        </value>
                                        <next>
                                          <block type="drive_forwards_time" id="v;nb7[EOXjokdmS?Y4y4">
                                            <value name="DURATION">
                                              <shadow type="math_positive_number" id="w5``Y]+fsp%:Uxp[@N?A">
                                                <field name="NUM">0.3</field>
                                              </shadow>
                                            </value>
                                          </block>
                                        </next>
                                      </block>
                                    </next>
                                  </block>
                                </next>
                              </block>
                            </next>
                          </block>
                        </next>
                      </block>
                    </next>
                  </block>
                </next>
              </block>
            </next>
          </block>
        </next>
      </block>
    </next>
  </block>
  <block type="new_event_start" id="vPEah;f,5Vq@@LR1BgJI" deletable="false" movable="false" x="18" y="148"></block>
</xml>